sql_stmt_list: ";"* (sql_stmt _SEMI+)+

sql_stmt: select_stmt
        | create_table_stmt
        | unexpected_stmt

select_stmt.10: K_SELECT K_DISTINCT? expr_as ("," expr_as)* \
				from_clause? (K_AS NAME)? where_clause? limit_clause?

create_table_stmt.10: K_CREATE K_TABLE NAME LPAREN column_def_list RPAREN

// include VALUE to ensure semicolons in strings are handled properly
// use column_name to match any unidentified keyword or column name
unexpected_stmt.-10: ("," | VALUE | any_word | operator | LPAREN unexpected_stmt RPAREN) +

subquery_or_expr: LPAREN select_stmt RPAREN | expr

from_clause: K_FROM subquery_or_expr join_clause*

column_def_list: NAME sql_type? ("," NAME sql_type?)*

join_clause: K_JOIN NAME (K_ON expr)?

where_clause: K_WHERE expr

limit_clause: K_LIMIT POS_INT

expr_as: expr (K_AS NAME)?

// TODO: expand expr
// expr_helper resolves shift/reduce conflicts by forcing right associativity
expr: expr_helper operator expr | expr_helper

expr_helper: LPAREN expr RPAREN
           | column_name
           | VALUE

any_word: table_name "." NAME | NAME

table_name: NAME
column_name: table_name "." NAME
           | NAME
           | STAR

// TODO: check what names are allowed and how values are specified
name_or_value: NAME
             | VALUE

sql_type: NAME ("("VALUE ")")?

// TODO: add more operators
operator: PLUS | MINUS | STAR | SLASH | EQUAL | GREATER | LESS

K_SELECT: "SELECT" | "select"
K_UPDATE: "UPDATE" | "update"
K_CREATE: "CREATE" | "create"
K_TABLE: "TABLE" | "table"
K_FROM: "FROM" | "from"
K_ON: "ON" | "on"
K_JOIN: "JOIN" | "join"
K_WHERE: "WHERE" | "where"
K_LIMIT: "LIMIT" | "limit"
K_DISTINCT: "DISTINCT" | "distinct"
K_AS: "AS" | "as"

PLUS: "+"
MINUS: "-"
STAR: "*"
SLASH: "/"
EQUAL: "="
GREATER: ">"
LESS: "<"

A: /A|a/
B: /B|b/
C: /C|c/
D: /D|d/
E: /E|e/
F: /F|f/
G: /G|g/
H: /H|h/
I: /I|i/
J: /J|j/
K: /K|k/
L: /L|l/
M: /M|m/
N: /N|n/
O: /O|o/
P: /P|p/
Q: /Q|q/
R: /R|r/
S: /S|s/
T: /T|t/
U: /U|u/
V: /V|v/
W: /W|w/
X: /X|x/
Y: /Y|y/
Z: /Z|z/

LPAREN: "("
RPAREN: ")"

NAME.1: /[a-zA-Z_]/ /[a-zA-Z0-9]*/

VALUE.2: /'([^']|'')*'/
       | ("+"|"-")? /[0-9]+/ /(\.[0-9]*)/?

POS_INT: /[0-9]+/

_SEMI: ";"

%import common.WS
%ignore WS